/*
 * Copyright (C) 2010-2021 NVIDIA CORPORATION & AFFILIATES, Ltd. ALL RIGHTS RESERVED.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
 * LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS
 * FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
 *
 * See the Apache Version 2.0 License for specific language governing
 * permissions and limitations under the License.
 *
 */

/*
 * [[ WARNING | AUTOMATICALLY GENERATED FILE ]]
 * This file has been generated by the script:
 *     applibs/sx_api_utils/generator/sx_strings_gen.py.
 *
 * You can manually modify this file ONLY for your testing needs.
 * In all other cases manual changes in this file must be removed
 * before committing. To modify content of this file in legal way
 * use ADB files.
 */


const char * sx_access_cmd_str(sx_access_cmd_t idx);
const char * sx_acl_search_type_str(sx_acl_search_type_t idx);
const char * sx_flex_acl_register_field_select_str(sx_flex_acl_register_field_select_t idx);
const char * sx_flex_action_alu_imm_command_str(sx_flex_action_alu_imm_command_t idx);
const char * sx_flex_action_alu_reg_command_str(sx_flex_action_alu_reg_command_t idx);
const char * sx_flex_action_alu_field_command_str(sx_flex_action_alu_field_command_t idx);
const char * sx_flex_action_register_access_command_str(sx_flex_action_register_access_command_t idx);
const char * sx_flex_acl_flex_action_elephant_flow_set_str(sx_flex_acl_flex_action_elephant_flow_set_e idx);
const char * sx_flex_modifier_emt_bind_type_str(sx_flex_modifier_emt_bind_type_e idx);
const char * sx_flex_acl_flex_action_type_str(sx_flex_acl_flex_action_type_t idx);
const char * sx_acl_key_str(sx_acl_key_t idx);
const char * sx_api_arb_policy_str(sx_api_arb_policy_t idx);
const char * sx_cos_max_buffer_mode_str(sx_cos_max_buffer_mode_t idx);
const char * sx_api_async_policy_str(sx_api_async_policy_e idx);
const char * sx_ar_profile_handle_str(sx_ar_profile_handle_e idx);
const char * sx_ar_profile_mode_str(sx_ar_profile_mode_e idx);
const char * sx_ar_grade_mode_str(sx_ar_grade_mode_e idx);
const char * sx_ar_classifier_type_str(sx_ar_classifier_type_e idx);
const char * sx_ar_classifier_id_str(sx_ar_classifier_id_e idx);
const char * sx_ar_classifier_action_type_str(sx_ar_classifier_action_type_e idx);
const char * sx_ar_classifier_header_type_l3_str(sx_ar_classifier_header_type_l3_e idx);
const char * sx_ar_classifier_header_type_l4_str(sx_ar_classifier_header_type_l4_e idx);
const char * sx_ar_classifier_bth_header_state_str(sx_ar_classifier_bth_header_state_e idx);
const char * sx_ar_classifier_l4_proto_str(sx_ar_classifier_l4_proto_e idx);
const char * sx_ar_classifier_l4_port_str(sx_ar_classifier_l4_port_e idx);
const char * sx_bridge_mode_str(sx_bridge_mode_t idx);
const char * sx_bridge_multiple_vlan_mode_str(sx_bridge_multiple_vlan_mode_t idx);
const char * sx_bridge_tunnel_counter_type_str(sx_bridge_tunnel_counter_type_t idx);
const char * sx_bulk_cntr_read_key_elephant_type_str(sx_bulk_cntr_read_key_elephant_type_e idx);
const char * sx_cos_buffer_max_mode_str(sx_cos_buffer_max_mode_e idx);
const char * sx_cos_port_buff_pool_direction_str(sx_cos_port_buff_pool_direction_e idx);
const char * sx_sb_snapshot_action_str(sx_sb_snapshot_action_e idx);
const char * sx_dbg_policy_str(sx_dbg_policy_e idx);
const char * sx_dbg_test_str(sx_dbg_test_e idx);
const char * sx_dbg_api_logger_mode_str(sx_dbg_api_logger_mode_e idx);
const char * sx_dbg_api_logger_filter_mode_str(sx_dbg_api_logger_filter_mode_e idx);
const char * sx_dev_node_type_str(sx_dev_node_type_t idx);
const char * sx_chip_types_str(sx_chip_types_t idx);
const char * sx_chip_rev_str(sx_chip_rev_t idx);
const char * sx_event_generate_mode_str(sx_event_generate_mode_t idx);
const char * sx_object_type_str(sx_object_type_t idx);
const char * api_logger_event_type_str(api_logger_event_type_e idx);
const char * sx_health_severity_str(sx_health_severity_t idx);
const char * sx_health_event_cause_str(sx_health_cause_t idx);
const char * sx_fdb_learn_mode_str(sx_fdb_learn_mode_t idx);
const char * sx_flood_type_str(flood_type_e idx);
const char * sx_fdb_notify_type_str(sx_fdb_notify_type_t idx);
const char * sx_fm_fid_type_str(sx_fm_fid_type_t idx);
const char * sx_flex_modifier_emt_id_str(sx_flex_modifier_emt_id_e idx);
const char * sx_flex_modifier_emt_update_field_str(sx_flex_modifier_emt_update_field_e idx);
const char * sx_flex_modifier_emt_command_str(sx_flex_modifier_emt_command_e idx);
const char * sx_flex_parser_header_fixed_str(sx_flex_parser_header_fixed_e idx);
const char * sx_flex_parser_header_fpp_str(sx_flex_parser_header_fpp_e idx);
const char * sx_flex_parser_fexp_str(sx_flex_parser_fexp_e idx);
const char * sx_flex_parser_encap_level_str(sx_flex_parser_encap_level_e idx);
const char * sx_flex_parser_header_type_str(sx_flex_parser_header_type_e idx);
const char * sx_flex_parser_fpp_type_str(sx_flex_parser_fpp_type_e idx);
const char * sx_flex_parser_ftlv_parsing_mode_str(sx_flex_parser_ftlv_parsing_mode_e idx);
const char * sx_extraction_point_type_str(sx_extraction_point_type_e idx);
const char * sx_receive_dest_port_str(sx_receive_dest_port_e idx);
const char * sx_tcam_opt_mode_str(sx_tcam_opt_mode_t idx);
const char * sx_tcam_opt_mode_param_str(sx_tcam_opt_mode_param_t idx);
const char * sx_boot_mode_str(sx_boot_mode_e idx);
const char * sx_ip_version_str(sx_ip_version_t idx);
const char * sx_lag_hash_bit_number_str(sx_lag_hash_bit_number_t idx);
const char * sx_lag_hash_type_str(sx_lag_hash_type_t idx);
const char * sx_mc_next_hop_type_str(sx_mc_next_hop_type_t idx);
const char * sx_mc_container_type_str(sx_mc_container_type_t idx);
const char * sx_mgmt_slot_device_gb_type_str(sx_mgmt_slot_device_gb_type_e idx);
const char * sx_mgmt_slot_card_type_str(sx_mgmt_slot_card_type_e idx);
const char * sx_mgmt_slot_ini_operation_str(sx_mgmt_slot_ini_operation_e idx);
const char * sx_mgmt_slot_ini_status_str(sx_mgmt_slot_ini_status_e idx);
const char * sx_mgmt_slot_ini_oper_status_str(sx_mgmt_slot_ini_oper_status_e idx);
const char * sx_mgmt_slot_control_operation_str(sx_mgmt_slot_control_operation_e idx);
const char * sx_mgmt_phy_module_type_str(sx_mgmt_phy_module_type_e idx);
const char * sx_port_module_state_str(sx_port_module_state_t idx);
const char * sx_port_module_error_type_str(sx_port_module_error_type_t idx);
const char * sx_mgmt_temp_snsr_ops_str(sx_mgmt_temp_snsr_ops_e idx);
const char * sx_mgmt_phy_module_cable_type_str(sx_mgmt_phy_module_cable_type_e idx);
const char * sx_module_admin_state_str(sx_module_admin_state_t idx);
const char * sx_mgmt_phy_mod_pwr_mode_str(sx_mgmt_phy_mod_pwr_mode_e idx);
const char * sx_mgmt_phy_mod_pwr_attr_type_str(sx_mgmt_phy_mod_pwr_attr_type_e idx);
const char * sx_mstp_inst_port_state_str(sx_mstp_inst_port_state_t idx);
const char * sx_mstp_iexclude_port_state_str(sx_mstp_exclude_port_state_t idx);
const char * sx_mstp_mode_str(sx_mstp_mode_t idx);
const char * sx_next_hop_type_str(sx_next_hop_type_t idx);
const char * sx_policer_action_str(sx_policer_action_t idx);
const char * sx_policer_rate_type_str(sx_policer_rate_type_e idx);
const char * sx_policer_meter_str(sx_policer_meter_t idx);
const char * sx_policer_ir_units_str(sx_policer_ir_units_e idx);
const char * sx_port_admin_state_str(sx_port_admin_state_t idx);
const char * sx_port_oper_state_str(sx_port_oper_state_t idx);
const char * sx_port_type_str(sx_port_type_t idx);
const char * sx_port_mode_str(sx_port_mode_t idx);
const char * sx_port_phy_speed_str(sx_port_phy_speed_t idx);
const char * sx_port_mapping_mode_str(sx_port_mapping_mode_t idx);
const char * sx_port_phys_loopback_str(sx_port_phys_loopback_t idx);
const char * sx_port_phys_link_side_str(sx_port_phys_link_side_t idx);
const char * sx_port_oper_speed_str(sx_port_oper_speed_t idx);
const char * sx_port_pause_policy_rx_str(sx_port_pause_policy_rx_t idx);
const char * sx_port_pause_policy_tx_str(sx_port_pause_policy_tx_t idx);
const char * sx_port_flow_ctrl_mode_str(sx_port_flow_ctrl_mode_t idx);
const char * sx_port_flow_ctrl_prio_str(sx_port_flow_ctrl_prio_t idx);
const char * sx_port_cntr_grp_str(sx_port_cntr_grp_t idx);
const char * sx_port_cntr_ieee_802_dot_3_str(sx_port_cntr_ieee_802_dot_3_e idx);
const char * sx_port_cntr_rfc_2863_str(sx_port_cntr_rfc_2863_e idx);
const char * sx_port_cntr_rfc_2819_str(sx_port_cntr_rfc_2819_e idx);
const char * sx_port_cntr_phy_layer_str(sx_port_cntr_phy_layer_e idx);
const char * sx_port_cntr_phy_layer_statistics_str(sx_port_cntr_phy_layer_statistics_e idx);
const char * sx_port_cntr_phy_layer_internal_link_str(sx_port_cntr_phy_layer_internal_link_e idx);
const char * sx_port_cntr_rfc_3635_str(sx_port_cntr_rfc_3635_e idx);
const char * sx_port_cntr_discard_str(sx_port_cntr_discard_e idx);
const char * sx_port_cntr_cli_str(sx_port_cntr_cli_e idx);
const char * sx_port_cntr_traffic_str(sx_port_cntr_traffic_e idx);
const char * sx_port_cntr_prio_str(sx_port_cntr_prio_e idx);
const char * sx_port_cntr_buff_str(sx_port_cntr_buff_e idx);
const char * sx_port_cntr_tc_congestion_str(sx_port_cntr_tc_congestion_e idx);
const char * sx_port_cntr_perf_str(sx_port_cntr_perf_e idx);
const char * sx_port_tc_id_str(sx_port_tc_id_t idx);
const char * sx_port_ber_fec_profile_str(sx_port_ber_fec_profile_e idx);
const char * sx_port_ber_alarm_state_str(sx_port_ber_alarm_state_e idx);
const char * sx_port_rate_str(sx_port_rate_e idx);
const char * sx_router_interface_type_str(sx_router_interface_type_t idx);
const char * sx_router_qos_mode_str(sx_router_qos_mode_t idx);
const char * sx_router_enable_state_str(sx_router_enable_state_t idx);
const char * sx_uc_route_type_str(sx_uc_route_type_e idx);
const char * sx_router_rpf_action_str(sx_router_rpf_action_t idx);
const char * sx_router_ecmp_hash_type_str(sx_router_ecmp_hash_type_t idx);
const char * sx_router_initial_activity_str(sx_router_initial_activity_e idx);
const char * sx_router_location_str(sx_router_location_e idx);
const char * sx_mc_router_ttl_cmd_str(sx_mc_router_ttl_cmd_t idx);
const char * sx_router_vinterface_type_str(sx_router_vinterface_type_t idx);
const char * sx_router_prio_type_str(sx_router_prio_type_t idx);
const char * sx_ecmp_type_str(sx_ecmp_type_e idx);
const char * sx_ecmp_container_type_e__str(sx_ecmp_container_type_e idx);
const char * sx_router_action_str(sx_router_action_t idx);
const char * sx_span_type_str(sx_span_type_t idx);
const char * sx_span_drop_reason_str(sx_span_drop_reason_t idx);
const char * sx_status_str(sx_status_t idx);
const char * sx_swid_info_field_bit_str(sx_swid_info_field_bit_t idx);
const char * sx_tele_histogram_type_str(sx_tele_histogram_type_e idx);
const char * sx_tele_histogram_mode_str(sx_tele_histogram_mode_e idx);
const char * sx_port_threshold_type_str(sx_port_threshold_type_e idx);
const char * sx_tunnel_decap_key_fields_type_str(sx_tunnel_decap_key_fields_type_e idx);
const char * sx_tunnel_ipinip_gre_mode_str(sx_tunnel_ipinip_gre_mode_e idx);
const char * sx_tunnel_type_str(sx_tunnel_type_e idx);
const char * sx_tunnel_direction_str(sx_tunnel_direction_e idx);
const char * sx_tunnel_underlay_domain_type_str(sx_tunnel_underlay_domain_type_e idx);
const char * SX_VLAN_QINQ_PRIO_TAG_MODE_str(sx_vlan_qinq_prio_tag_mode_t idx);
